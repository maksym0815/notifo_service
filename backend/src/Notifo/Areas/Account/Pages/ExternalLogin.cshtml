@page
@inject IHtmlLocalizer<AppResources> T
@model ExternalLoginModel
@{
    ViewData["Title"] = T["RegisterTitle"];
}

<h2>@ViewData["Title"]</h2>

<p class="text-muted">
    @T["ExternalLoginText", Model.LoginProvider]
</p>

<form asp-page-handler="Confirmation" asp-route-returnUrl="@Model.ReturnUrl" method="post">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

    @if (Model.MustAcceptsTermsOfService)
    {
        <div class="form-group">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" asp-for="Input.AcceptTermsOfService">

                <label class="custom-control-label" asp-for="Input.AcceptTermsOfService">@T["AgreeToTermsOfService", Model.TermsOfServiceUrl]</label>
            </div>

            <span asp-validation-for="Input.AcceptTermsOfService" class="invalid-feedback"></span>
        </div>
    }

    @if (Model.MustAcceptsPrivacyPolicy)
    {
        <div class="form-group">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" asp-for="Input.AcceptPrivacyPolicy">

                <label class="custom-control-label" asp-for="Input.AcceptPrivacyPolicy">@T["AgreeToPrivacyPolicy", Model.PrivacyPolicyUrl]</label>
            </div>

            <span asp-validation-for="Input.AcceptPrivacyPolicy" class="invalid-feedback"></span>
        </div>
    }

    <button type="submit" class="btn btn-primary">@T["RegisterButton"]</button>
</form>